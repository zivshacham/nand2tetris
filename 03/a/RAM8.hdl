// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /** Assign the load value into the the adress cell:
     * according to the 3 MSB:
     * 000 == 0 and is equal to 'a',
     * 001 == 1 and is equal to 'b' and so on...
     * 111 == 7 and is equal to 'h'
     */ 
    DMux8Way(in=load, sel=address, 
             a=a, 
             b=b, 
             c=c, 
             d=d, 
             e=e, 
             f=f, 
             g=g, 
             h=h);

    // Assign the in value into the adress cell
    Register(in=in, load=a, out=outA);
    Register(in=in, load=b, out=outB);
    Register(in=in, load=c, out=outC);
    Register(in=in, load=d, out=outD);
    Register(in=in, load=e, out=outE);
    Register(in=in, load=f, out=outF);
    Register(in=in, load=g, out=outG);
    Register(in=in, load=h, out=outH);

    // Assign the value to the out
    Mux8Way16(a=outA,
              b=outB,
              c=outC, 
              d=outD, 
              e=outE, 
              f=outF, 
              g=outG, 
              h=outH, 
              sel=address, out=out);
}