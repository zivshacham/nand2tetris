// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    /** Assign the load value into the RAM4K selector adress cell:
     * according to the 2 MSB:
     * 00 == 0 and is equal to 'a',
     * 01 == 1 and is equal to 'b'
     * 10 == 2 and is equal to 'c'
     * 11 == 3 and is equal to 'd'
     */ 
    DMux4Way(in=load, sel=address[12..13], 
             a=a, 
             b=b, 
             c=c, 
             d=d
             );
             
    // Assign the in value into the adress cell
    RAM4K(in=in, load=a, address=address[0..11], out=outA);
    RAM4K(in=in, load=b, address=address[0..11], out=outB);
    RAM4K(in=in, load=c, address=address[0..11], out=outC);
    RAM4K(in=in, load=d, address=address[0..11], out=outD);

    // Assign the value to the out
    Mux4Way16(a=outA,
              b=outB,
              c=outC, 
              d=outD, 
              sel=address[12..13], out=out);
}