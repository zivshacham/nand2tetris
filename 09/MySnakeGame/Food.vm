function Food.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push pointer 0
push constant 511
call Random.randRange 1
call Food.calculateSquare 2
pop this 0
push pointer 0
call Food.draw 1
pop temp 0
push pointer 0
return
function Food.draw 1
push argument 0
pop pointer 0
push constant 16384
push this 0
add
pop local 0
push local 0
push constant 32
add
push constant 112
call Memory.poke 2
pop temp 0
push local 0
push constant 64
add
push constant 128
call Memory.poke 2
pop temp 0
push local 0
push constant 96
add
push constant 128
call Memory.poke 2
pop temp 0
push local 0
push constant 128
add
push constant 8184
call Memory.poke 2
pop temp 0
push local 0
push constant 160
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 192
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 224
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 256
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 288
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 320
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 352
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 384
add
push constant 8188
call Memory.poke 2
pop temp 0
push local 0
push constant 416
add
push constant 4088
call Memory.poke 2
pop temp 0
push constant 0
return
function Food.getLocation 0
push argument 0
pop pointer 0
push this 0
return
function Food.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Food.calculateSquare 2
push argument 0
pop pointer 0
push argument 1
pop local 0
push constant 0
pop local 1
label WHILE_EXP0
push local 0
push constant 32
gt
not
if-goto WHILE_END0
push local 0
push constant 32
sub
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push local 0
add
pop local 1
push local 1
push argument 1
push constant 32
call Math.divide 2
push constant 512
call Math.multiply 2
add
pop local 1
push local 1
return
